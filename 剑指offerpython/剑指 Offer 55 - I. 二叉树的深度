
输入一棵二叉树的根节点，求该树的深度。从根节点到叶节点依次经过的节点（含根、叶节点）形成树的一条路径，最长路径的长度为树的深度。


class Solution:
    def maxDepth(self, root: TreeNode) -> int:
        if root is None:
            return 0
        return 1 + max(self.maxDepth(root.left), self.maxDepth(root.right))
        
        
class Solution:
    def maxDepth(self, root: TreeNode) -> int:
        if root is None:
            return 0
        depth = 0
        queue = [root]
        while queue:
            
            r = []
            ##every level name a list
            size = len(queue)
            for i in range(size):
                node = queue.pop() 
                if node.left:
                    r.append(node.left)
                if node.right:
                    r.append(node.right)
            depth += 1
            queue = r
        return depth
            
