
输入一个非负整数数组，把数组里所有数字拼接起来排成一个数，打印能拼接出的所有数字中最小的一个。

 

示例 1:

输入: [10,2]
输出: "102"
示例 2:

输入: [3,30,34,5,9]
输出: "3033459"


思路：实现一个排序，定义排序用sorted(iterable, key = functools.cmp_to_key())
两个strings相连，直接比较大小

def minNumber(self, nums: List[int]) -> str:
        #alist = []
        #nums = [self.digits(nu, alist) for nu in nums]
        nums = [str(n) for n in nums]
        def order(n, n2):
            if n + n2 == n2 + n:
                return 0
            elif n + n2 > n2 + n:
                return 1
            else:
                return -1
        return ''.join(sorted(nums, key = functools.cmp_to_key(order)))
